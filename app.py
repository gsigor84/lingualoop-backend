from flask import Flask, request, jsonifyfrom flask_cors import CORSfrom ai.generator import generate_lessonfrom ai.quiz_generator import generate_quizfrom ai.rhyme_generator import generate_rhymesfrom ai.unsplash_client import fetch_image_urlfrom ai.rhyme_quiz_api import rhyme_quiz_bpapp = Flask(__name__)CORS(app)app.register_blueprint(rhyme_quiz_bp)# Health check@app.route("/")def home():    return jsonify({"message": "LinguaLoop backend running ‚úÖ"})# Lesson generator route@app.route("/api/generate", methods=["POST"])def generate():    data = request.get_json()    topic = data.get("topic")    level = data.get("level", "Beginner")    language = data.get("language", "English")    if not topic:        return jsonify({"error": "Topic is required"}), 400    print(f"üì© Received lesson request: topic={topic}, level={level}, language={language}")    try:        lesson = generate_lesson(topic, level, language)        return jsonify(lesson)    except Exception as e:        print("‚ùå Lesson generation failed:", e)        return jsonify({"error": str(e)}), 500# Quiz generator route@app.route("/api/quiz", methods=["POST"])def generate_quiz_route():    data = request.get_json()    topic = data.get("topic")    level = data.get("level", "Beginner")    language = data.get("language", "English")    if not topic:        return jsonify({"error": "Topic is required"}), 400    try:        lesson = generate_lesson(topic, level, language)        vocab_strings = [f"{item['english']}: {item['translation']}" for item in lesson["vocab"]]        quiz_data = generate_quiz(vocab_strings, get_image=fetch_image_url)        return jsonify({ "quiz": quiz_data })    except Exception as e:        print("‚ùå Quiz error:", e)        return jsonify({ "error": str(e) }), 500    except Exception as e:        print("‚ùå Quiz error:", e)        return jsonify({"error": str(e)}), 500    except Exception as e:        print("‚ùå Quiz error:", e)        return jsonify({"error": str(e)}), 500@app.route("/api/rhymes", methods=["POST"])def generate_rhyme_lesson():    data = request.get_json()    theme = data.get("theme", "").strip()    language = data.get("language", "Spanish").strip()    if not theme:        return jsonify({"error": "Missing theme"}), 400    print(f"üì© Generating rhymes for theme='{theme}' in language='{language}'")    try:        rhymes = generate_rhymes(theme, language)        # Attach image for each English word        for item in rhymes:            english_word = item.get("english")            item["image"] = fetch_image_url(english_word)        return jsonify({ "result": rhymes })    except Exception as e:        print("‚ùå Rhyme generation failed:", e)        return jsonify({ "error": str(e) }), 500if __name__ == "__main__":    app.run(debug=True)
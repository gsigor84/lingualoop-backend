from flask import Blueprint, request, jsonifyfrom openai import OpenAIimport osfrom dotenv import load_dotenvload_dotenv()client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))rhyme_quiz_bp = Blueprint("rhyme_quiz", __name__)@rhyme_quiz_bp.route("/api/rhyme-quiz", methods=["POST"])def generate_rhyme_quiz():    data = request.get_json()    rhymes = data.get("rhymes", [])    language = data.get("language", "Spanish")    if not rhymes:        return jsonify({"error": "Missing rhymes"}), 400    prompt = f"""You are a quiz writer. Based on the following {language} vocabulary list, create multiple-choice questions. Each question should ask for the English meaning of a {language} word.Vocabulary:{chr(10).join([f"{item['spanish']} = {item['english']}" for item in rhymes])}Output format:Q: What does "..." mean?Options:A.B.C.D.Answer: X    """    try:        response = client.chat.completions.create(            model="gpt-3.5-turbo",            messages=[{"role": "user", "content": prompt}],            temperature=0.7        )        quiz_text = response.choices[0].message.content        return jsonify({"quiz": quiz_text})    except Exception as e:        return jsonify({"error": str(e)}), 500
import osfrom openai import OpenAIfrom dotenv import load_dotenvload_dotenv()client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))def generate_rhymes(theme="food", language="Spanish", count=5):    prompt = f"""You are a creative language tutor. For the theme '{theme}', generate a list of rhyming vocabulary items for beginner learners.Each item should include:1. The word in {language}2. The English translation3. A short, fun rhyme written in {language}, using the {language} word and the theme context.Example:- {language}: Pomme    English: Apple    Rhyme: Pomme est un fruit délicieux, j'en mange toujours un ou deux.Output format:- {language}: [Translated word]  English: [English word]  Rhyme: [in {language}]Generate {count} such entries based on the theme '{theme}'."""    try:        response = client.chat.completions.create(            model="gpt-3.5-turbo",            messages=[{"role": "user", "content": prompt}],            temperature=0.8        )        text = response.choices[0].message.content        # print(prompt)        # print(text)        rhymes = []        current = {}        for line in text.split("\n"):            line = line.strip()            if line.startswith(f"- {language}:"):                current = {"spanish": line.split(":")[1].strip()}  # still using 'spanish' key            elif line.startswith("English:"):                current["english"] = line.split(":")[1].strip()            elif line.startswith("Rhyme:"):                current["rhyme"] = line.split(":", 1)[1].strip()                rhymes.append(current)        return rhymes    except Exception as e:        print("❌ Error generating rhymes:", e)        return []